#BlueJ class context
comment0.params=parser
comment0.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment1.params=r1\ r2\ field
comment1.target=org.apache.commons.csv.CSVRecord\ getLowest(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord,\ java.lang.String)
comment10.params=parser
comment10.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=void\ testingFileAverage()
comment12.params=parser\ value
comment12.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment13.params=
comment13.target=void\ testingAverageWithHumidity()
comment2.params=
comment2.target=void\ testColdestHourInFile()
comment3.params=coldest\ f
comment3.target=java.io.File\ getColdestOfTwoFiles(java.io.File,\ java.io.File)
comment4.params=
comment4.target=void\ fileWithColdestTemperature()
comment5.params=parser
comment5.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment6.params=
comment6.target=void\ testingHumidity()
comment7.params=
comment7.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment8.params=
comment8.target=void\ testingManyHumidity()
comment9.params=lowest\ f
comment9.target=java.io.File\ getLowestOfTwoFiles(java.io.File,\ java.io.File)
numComments=14
